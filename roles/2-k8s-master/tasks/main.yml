- name: Master - Check swap is disabled
  ansible.builtin.fail: msg="Swap has to be disabled"
  when: ansible_swaptotal_mb > 0

- name: Master - Check if kubeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

# First clean secondary masters, leaving the primary.
- ansible.builtin.include_tasks: clean.yaml
  when: kubeadm_ca.stat.exists and not inventory_hostname == groups['masters'][0]

# Then clean the primary master.
- ansible.builtin.include_tasks: clean.yaml
  when: kubeadm_ca.stat.exists and inventory_hostname == groups['masters'][0]

- name: Master - Will be installing this kubernetes version
  ansible.builtin.debug:
    msg: "{{ kubernetes_version | default('stable-1') }}"

- name: Master - Pull the Kubernetes images
  become: true
  ansible.builtin.shell: |
    kubeadm config images pull \
      --kubernetes-version {{ kubernetes_version }} \
      {{ init_opts }}
  vars:
    init_opts: ""
  register: images_pulled
  changed_when: '" Pulled " in images_pulled.stdout'

- name: Master - Init first master of cluster
  ansible.builtin.include_tasks: "first-master.yml"
  when: inventory_hostname == groups['masters'][0]
  vars:
    - kubeadmin_config: /etc/kubernetes/admin.conf

- name: Master - Validate load balancer
  ansible.builtin.include_tasks: validate-loadbalancer.yaml

- name: Master - Join other masters to cluster
  ansible.builtin.include_tasks: "join.yml"
  when: not inventory_hostname == groups['masters'][0]

- name: Master - Enable and check kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  become: true
  register: started_kubelet

# It seems the API server is restarted after joining the secondary master.
# Just wait it out.
- name: Master - Validate load balancer
  ansible.builtin.include_tasks: validate-loadbalancer.yaml

- ansible.builtin.include_tasks: all-pods-running.yaml

- name: Master - do facts module to get latest information
  ansible.builtin.setup:
