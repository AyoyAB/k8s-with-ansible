- name: Node - Check swap is disabled
  ansible.builtin.fail: msg="Swap has to be disabled"
  when: ansible_swaptotal_mb > 0

- name: Node - Check if kubeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.crt"
  register: kubeadm_ca

# Clean nodes.
- name: Node - Clean out previous kubernetes installation.
  ansible.builtin.include_tasks: clean.yaml
  when: kubeadm_ca.stat.exists

- name: Node - Pull the Kubernetes images
  become: true
  ansible.builtin.shell: |
    kubeadm config images pull \
      --kubernetes-version {{ kubernetes_version }}
  register: images_pulled
  changed_when: '" Pulled " in images_pulled.stdout'

- name: Node - Join nodes to cluster
  ansible.builtin.include_tasks: "join.yml"

- name: Node - Enable and check kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  become: true
  register: started_kubelet

- name: Node - do facts module to get latest information
  ansible.builtin.setup: {}

- name: Node - Approve node certificates
  delegate_to: localhost
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail #
      kubectl --kubeconfig {{ k8s_files_kubeconfig }} \
        get csr \
        -o json |\
      jq -r '.items[] | select (.status.conditions == null) | .metadata.name'  |\
      xargs kubectl --kubeconfig {{ k8s_files_kubeconfig }} \
        certificate approve
  register: certificate_approval
  changed_when: '" approved" in certificate_approval.stdout'

- name: Node - Wait for node to be ready
  delegate_to: localhost
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail #
      kubectl get node {{ item }} -o json |\
        jq -r '.status.conditions[] | select(.type == "Ready") | .status'
  register: node_status
  until: node_status.stdout_lines[0] == "True"
  with_items: "{{ groups['nodes'] }}"
  delay: 5
  retries: 12
  changed_when: false

- name: Node - Wait for the rest of the CSRs
  ansible.builtin.pause:
    seconds: 15

- name: Node - Approve node certificates
  delegate_to: localhost
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: |
      set -o pipefail #
      kubectl --kubeconfig {{ k8s_files_kubeconfig }} \
        get csr \
        -o json |\
      jq -r '.items[] | select (.status.conditions == null) | .metadata.name'  |\
      xargs kubectl --kubeconfig {{ k8s_files_kubeconfig }} \
        certificate approve
  register: certificate_approval
  changed_when: '" approved" in certificate_approval.stdout'
