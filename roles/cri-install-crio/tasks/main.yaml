- debug: var=ansible_distribution_release
- debug: var=ansible_distribution_major_version
- debug: var=ansible_distribution
- debug: var=ansible_architecture
- debug: var=ansible_lsb.id

- name: Retrive cri-o version from kubernetes version
  set_fact:
    CRIO_KUBE_VERSION: "{{ kubernetes_version | regex_search('^[0-9]+\\.[0-9]+') }}"

- name: Set version
  set_fact:
    CRIO_VERSION: "{{ CRIO_KUBE_VERSION }}"
  when: not CRIO_KUBE_VERSION == ""

- name: Check that cri-o version could be retrieved from kubernetes_version
  fail:
    msg: "Warning: Expected extracted version from '{{ kubernetes_version }}' not to be empty."
  when: CRIO_KUBE_VERSION == ""
  ignore_errors: True

- debug:
    msg: "Will use cri-o version {{ CRIO_VERSION }}"

- pause:
    seconds: 3600
  when: CRIO_KUBE_VERSION == ""

- name: cri-install-crio - Install CRI-O on Debian
  when: ansible_distribution == "Debian"
  include_tasks: install_debian.yaml

- fail:
    msg: cri-install-crio - Unsupported OS
  when: ansible_distribution != "Debian"

- name: cri-install-crio - Copy registries configuration
  template:
    dest: /etc/containers/registries.conf
    src: templates/registries.conf

- name: cri-install-crio - Install trusted certificates
  template:
    src: templates/registry-certificate.crt
    dest: "/usr/local/share/ca-certificates/{{ item.host }}.crt"
  with_items: "{{ trusted_registry_cas }}"
  notify:
    - Update-ca-certs
    - Restart-crio

- name: cri-install-crio - Make sure cri-o service unit is running
  ansible.builtin.systemd:
    enabled: true
    state: started
    name: crio
